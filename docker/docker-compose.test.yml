version: '3.8'

services:
  # Test Kafka cluster
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_LOG_RETENTION_HOURS: 1
      KAFKA_LOG_SEGMENT_BYTES: 1048576

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --maxmemory 256mb --maxmemory-policy allkeys-lru

  # PostgreSQL for testing
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: analytics_test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
    volumes:
      - postgres_test_data:/var/lib/postgresql/data

  # MLflow tracking server for model registry
  mlflow:
    image: python:3.11-slim
    ports:
      - "5001:5000"
    volumes:
      - mlflow_data:/mlflow
    working_dir: /mlflow
    command: >
      sh -c "
        pip install mlflow[extras] psycopg2-binary &&
        mlflow server --host 0.0.0.0 --port 5000 --default-artifact-root /mlflow/artifacts --backend-store-uri sqlite:///mlflow.db
      "

  # WebSocket test client simulator
  websocket-client:
    build:
      context: ..
      dockerfile: docker/Dockerfile.test-client
    depends_on:
      - kafka
      - redis
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - REDIS_URL=redis://redis:6379
      - WEBSOCKET_URL=ws://host.docker.internal:8765

volumes:
  postgres_test_data:
  mlflow_data:

networks:
  default:
    name: streaming_test_network
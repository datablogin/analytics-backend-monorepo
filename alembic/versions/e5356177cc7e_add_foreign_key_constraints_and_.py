"""Add foreign key constraints and relationships

Revision ID: e5356177cc7e
Revises: 51373eb465d5
Create Date: 2025-07-23 12:42:09.842419

"""

from collections.abc import Sequence

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "e5356177cc7e"
down_revision: str | Sequence[str] | None = "51373eb465d5"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "roles",
        sa.Column("is_active", sa.Boolean(), nullable=False, server_default="1"),
    )
    op.create_foreign_key(
        op.f("fk_audit_logs_user_id_users"), "audit_logs", "users", ["user_id"], ["id"]
    )
    op.create_foreign_key(
        op.f("fk_user_roles_user_id_users"), "user_roles", "users", ["user_id"], ["id"]
    )
    op.create_foreign_key(
        op.f("fk_user_roles_role_id_roles"), "user_roles", "roles", ["role_id"], ["id"]
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(
        op.f("fk_user_roles_role_id_roles"), "user_roles", type_="foreignkey"
    )
    op.drop_constraint(
        op.f("fk_user_roles_user_id_users"), "user_roles", type_="foreignkey"
    )
    op.drop_column("roles", "is_active")
    op.drop_constraint(
        op.f("fk_audit_logs_user_id_users"), "audit_logs", type_="foreignkey"
    )
    # ### end Alembic commands ###

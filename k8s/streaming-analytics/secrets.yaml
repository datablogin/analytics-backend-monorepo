apiVersion: v1
kind: Secret
metadata:
  name: streaming-secrets
  namespace: streaming-analytics
  labels:
    app: streaming-analytics
type: Opaque
data:
  # Kafka credentials (base64 encoded)
  # Replace with actual base64 encoded values
  STREAMING_KAFKA__SASL_USERNAME: a2Fma2EtdXNlcg==  # kafka-user
  STREAMING_KAFKA__SASL_PASSWORD: a2Fma2EtcGFzc3dvcmQ=  # kafka-password
  
  # Database credentials
  DATABASE_USER: c3RyZWFtaW5nX3VzZXI=  # streaming_user
  DATABASE_PASSWORD: c3RyZWFtaW5nX3Bhc3N3b3Jk  # streaming_password
  
  # Redis password
  REDIS_PASSWORD: cmVkaXMtcGFzc3dvcmQ=  # redis-password
  
  # MLflow token
  STREAMING_MLFLOW_TRACKING_TOKEN: bWxmbG93LXRva2Vu  # mlflow-token
  
  # JWT secret for WebSocket authentication
  JWT_SECRET_KEY: anlvdXItand0LXNlY3JldC1rZXktaGVyZQ==  # your-jwt-secret-key-here
  
  # SSL/TLS certificates for WebSocket
  STREAMING_WEBSOCKET__SSL_CERT_PATH: "/etc/ssl/certs/websocket.crt"
  STREAMING_WEBSOCKET__SSL_KEY_PATH: "/etc/ssl/private/websocket.key"
  STREAMING_WEBSOCKET__SSL_CA_PATH: "/etc/ssl/certs/ca.crt"
---
apiVersion: v1
kind: Secret
metadata:
  name: streaming-tls-secret
  namespace: streaming-analytics
  labels:
    app: streaming-analytics
type: kubernetes.io/tls
data:
  # Replace with actual base64 encoded certificate and private key
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t  # base64 encoded certificate
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0t   # base64 encoded private key
name: Claude Code Review

on:
  pull_request:
    types: [opened] #[opened, synchronize]
    # Only run on Python file changes and important config files
    paths:
      - "libs/**/*.py"
      - "services/**/*.py"
      - "tests/**/*.py"
      - "pyproject.toml"
      - "*.py"

jobs:
  claude-review:
    # Temporarily disabled while testing new claude-review.sh script
    if: false
    # Optional: Filter by PR author
    # if: |
    #   github.event.pull_request.user.login == 'external-contributor' ||
    #   github.event.pull_request.user.login == 'new-developer' ||
    #   github.event.pull_request.author_association == 'FIRST_TIME_CONTRIBUTOR'
    
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run Claude Code Review
        id: claude-review
        uses: anthropics/claude-code-action@v0.0.40
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}

          # Optional: Specify model (defaults to Claude Sonnet 4, uncomment for Claude Opus 4)
          # model: "claude-3-5-sonnet-20241022"
          
          # Direct prompt for automated review (no @claude mention needed)
          direct_prompt: |
            Please review this pull request following our analytics backend monorepo conventions:
            
            **Code Quality & Standards:**
            - Use Python 3.11+ features and type hints for all functions
            - Follow ruff formatting (88 char line length) 
            - Use Pydantic for data validation
            - Use structured logging with structlog
            - Follow async/await patterns for I/O operations
            
            **Architecture & Patterns:**
            - Shared functionality should be in libs/
            - Independent services in services/
            - Use Pydantic Settings for environment config
            - Consistent error responses across services
            
            **Review Focus:**
            - Code quality and adherence to project standards
            - Potential bugs or security issues
            - Performance considerations
            - Test coverage and quality
            - Proper use of shared libraries and patterns
            
            Be constructive and helpful in your feedback. Reference specific files and line numbers when possible.

          # Use sticky comments for cleaner PR experience
          use_sticky_comment: true
          
          # Optional: Customize review based on file types
          # direct_prompt: |
          #   Review this PR focusing on:
          #   - For TypeScript files: Type safety and proper interface usage
          #   - For API endpoints: Security, input validation, and error handling
          #   - For React components: Performance, accessibility, and best practices
          #   - For tests: Coverage, edge cases, and test quality
          
          # Optional: Different prompts for different authors
          # direct_prompt: |
          #   ${{ github.event.pull_request.author_association == 'FIRST_TIME_CONTRIBUTOR' && 
          #   'Welcome! Please review this PR from a first-time contributor. Be encouraging and provide detailed explanations for any suggestions.' ||
          #   'Please provide a thorough code review focusing on our coding standards and best practices.' }}
          
          # Allow Claude to run project-specific commands
          allowed_tools: "Bash(make lint),Bash(make format),Bash(make type-check),Bash(make test),Bash(uv sync),Bash(make dev-install)"
          
          # Optional: Skip review for certain conditions
          # if: |
          #   !contains(github.event.pull_request.title, '[skip-review]') &&
          #   !contains(github.event.pull_request.title, '[WIP]')

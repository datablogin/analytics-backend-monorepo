name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
        enable-cache: true
        cache-dependency-glob: "pyproject.toml"
    
    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        uv sync --extra dev --extra test --extra ml
    
    - name: Run linting
      run: |
        uv run ruff check .
    
    - name: Run formatting check
      run: |
        uv run ruff format --check .
    
    - name: Run type checking
      run: |
        uv run mypy libs/ services/
    
    - name: Run tests
      run: |
        uv run pytest --cov=libs --cov=services --cov-report=xml --cov-report=term
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
        enable-cache: true
        cache-dependency-glob: "pyproject.toml"
    
    - name: Set up Python
      run: uv python install 3.11
    
    - name: Install dependencies
      run: |
        uv sync --extra dev
    
    - name: Run security scan
      run: |
        uv run safety check || echo "Security scan completed with warnings"

  docker:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Test Docker build (analytics-api)
      run: |
        if [ -f services/analytics_api/Dockerfile ]; then
          docker build -t analytics-api:test services/analytics_api
        else
          echo "No Dockerfile found for analytics-api, skipping Docker build test"
        fi
name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_DB: analytics_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
    
    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        uv sync --extra dev --extra test --extra ml
    
    - name: Lint with ruff
      run: |
        uv run ruff check .
    
    - name: Format check with ruff
      run: |
        uv run ruff format --check .
    
    - name: Type check with mypy
      run: |
        uv run mypy libs/ services/ --ignore-missing-imports --explicit-package-bases
    
    - name: Test with pytest
      env:
        DATABASE_URL: postgresql://postgres:password@localhost:5432/analytics_test
        REDIS_URL: redis://localhost:6379
      run: |
        uv run pytest --cov=libs --cov=services --cov-report=xml --cov-report=term-missing
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
    
    - name: Set up Python 3.11
      run: uv python install 3.11
    
    - name: Install dependencies
      run: |
        uv sync --extra dev
    
    - name: Run safety check
      run: |
        uv add safety
        uv run safety check
      continue-on-error: true

  docker:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build analytics-api image
      run: |
        docker build -f docker/Dockerfile.analytics-api -t analytics-api:test .
    
    - name: Build ml-inference image
      run: |
        docker build -f docker/Dockerfile.ml-inference -t ml-inference:test .
    
    - name: Test docker-compose
      run: |
        cd docker
        docker-compose config